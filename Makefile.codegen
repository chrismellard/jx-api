CLIENTSET_GENERATOR_VERSION := kubernetes-1.19.2

# Produce CRDs that work back to Kubernetes 1.11 (no version conversion)
CRD_OPTIONS ?= "crd:trivialVersions=true"

# Generate go code using generate directives in files and kubernetes code generation
# Anything generated by this target should be checked in
generate: ## Generate the Go code (crds, mocks, openapi, client)
	./hack/update-codegen.sh
	@$(MAKE) fmt
	@$(MAKE) importfmt
	@echo "Generation complete"

install-refdocs:
	$(GO) get github.com/jenkins-x/gen-crd-api-reference-docs

generate-refdocs: generate-api-refdocs generate-config-refdocs

generate-api-refdocs: install-refdocs
	${GOPATH}/bin/gen-crd-api-reference-docs -config "docs/refdocs/config.json" \
	-template-dir docs/refdocs/templates \
    -api-dir "./pkg/apis/jenkins.io" \
    -out-file docs/apidocs.md

generate-config-refdocs:
	${GOPATH}/bin/gen-crd-api-reference-docs -config "docs/configdocs/config.json" \
	-template-dir docs/configdocs/templates \
    -api-dir "./pkg/config" \
    -out-file docs/config.md

stash:
	# Making sure repo has no outstanding changes
	git stash

# Verifies that generated code is in sync with implementation
verify-generation-complete: stash generate ## Verify the generated code is up to date
	$(eval CHANGED = $(shell git ls-files --modified --others --exclude-standard))
	@if [ "$(CHANGED)" == "" ]; \
      	then \
      	    echo "All generated files up to date"; \
      	else \
      		echo "Code generation is out of date"; \
      		echo "$(CHANGED)"; \
			git diff; \
      		exit 1; \
      	fi


# find or download controller-gen
# download controller-gen if necessary
controller-gen:
ifeq (, $(shell which controller-gen))
	@{ \
	set -e ;\
	CONTROLLER_GEN_TMP_DIR=$$(mktemp -d) ;\
	cd $$CONTROLLER_GEN_TMP_DIR ;\
	go mod init tmp ;\
	go get sigs.k8s.io/controller-tools/cmd/controller-gen@v0.2.5 ;\
	rm -rf $$CONTROLLER_GEN_TMP_DIR ;\
	}
CONTROLLER_GEN=$(GOBIN)/controller-gen
else
CONTROLLER_GEN=$(shell which controller-gen)
endif


# Generate manifests e.g. CRD, RBAC etc.
manifests: controller-gen
	$(CONTROLLER_GEN) $(CRD_OPTIONS) rbac:roleName=manager-role webhook paths="./..." output:crd:artifacts:config=config/crd/bases
